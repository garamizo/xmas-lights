int8_t X[] = {
  0,
  4,
  -6,
  3,
  7,
  -9,
  -8,
  10,
  13,
  -3,
  -17,
  -11,
  9,
  20,
  12,
  -7,
  -22,
  -19,
  -1,
  18,
  25,
  15,
  -5,
  -23,
  -28,
  -16,
  4,
  23,
  30,
  22,
  3,
  -18,
  -31,
  -31,
  -16,
  6,
  25,
  35,
  31,
  14,
  -8,
  -28,
  -37,
  -34,
  -18,
  4,
  26,
  38,
  39,
  26,
  40,
  31,
  16,
  -2,
  -20,
  -34,
  -42,
  -42,
  -35,
  -21,
  -3,
  15,
  31,
  42,
  45,
  42,
  31,
  15,
  -4,
  -22,
  -36,
  -45,
  -47,
  -42,
  -31,
  -14,
  4,
  22,
  37,
  47,
  50,
  46,
  36,
  20,
  2,
  -16,
  -33,
  -45,
  -51,
  -51,
  -44,
  -31,
  -15,
  4,
  22,
  37,
  48,
  54,
  52,
  45,
  32,
  16,
  -3,
  -21,
  -37,
  -49,
  -56,
  -56,
  -51,
  -40,
  -25,
  -7,
  12,
  29,
  44,
  54,
  60,
  59,
  53,
  41,
  26,
  8,
  -10,
  -28,
  -44,
  -55,
  -62,
  -63,
  -59,
  -50,
  -37,
  -20,
  -2,
  17,
  34,
  49,
  60,
  66,
  67,
  62,
  53,
  40,
  24,
  6,
  -13,
  -31,
  -46,
  -59,
  -67,
  -70,
  -68,
  -62,
  -51,
  -37,
  -20,
  -1,
  17,
  35,
  50,
  62,
  70,
  73,
  72,
  66,
  56,
  42,
  26,
  8,
  -11,
  -29,
  -45,
  -59,
  -69,
  -75,
  -77,
  -74,
  -67,
  -55,
  -41,
  -24,
  -6,
  13,
  31,
  47,
  61,
  71,
  78,
  80,
  78,
  72,
  62,
  48,
  32,
  15,
  -4,
  -23,
  -40,
  -55,
  -68,
  -77,
  -82,
  -84,
  -81,
  -74,
  -63,
  -49,
  -33,
  -15,
  3,
  22,
  39,
  55,
  68,
  78,
  85,
  88,
  86,
  81,
  72,
  60,
  45,
  28,
  10,
  -9,
  -28,
  -45,
  -60,
  -73,
  -83,
  -89,
  -91,
  -90,
  -85,
  -76,
  -64,
  -50,
  -33,
  -15,
  3,
  22,
  40,
  56,
  70,
  81,
  89,
  94,
  95,
  92,
  86,
  77,
  64,
  49,
  32,
  14,
  -5,
  -23,
  -41,
  -57,
  -71,
  -83,
  -91,
  -97,
  -98,
  -96,
  -91,
  -82,
  -71,
  -57,
  -40,
  -23,
  -4,
  15,
  33,
  50,
  65,
  79,
  89,
  96,
  100,
  101,
  98,
  92,
  83,
  71,
  56,
  40,
  22,
  3,
  -16,
  -34,
  -51,
  -66,
  -80,
  -90,
  -98,
  -103,
  -104,
  -102,
  -97,
  -88,
  -77,
  -63,
  -47,
  -30,
  -11,
  7,
  26,
  44,
  60,
  75,
  87,
  96,
  103,
  106,
  106,
  103,
  97,
  88,
  76,
  61,
  45,
  28,
  9,
  -10,
  -28,
  -46,
  -62,
  -77,
  -89,
  -98,
  -105,
  -109,
  -109,
  -106,
  -100,
  -92,
  -80,
  -66,
  -50,
  -33,
  -15,
  4,
  23,
  41,
  57,
  73,
  86,
  97,
  105,
  110,
  112,
  111,
  107,
  99,
  89,
  77,
  62,
  46,
  28,
  10,
  -9,
  -28,
  -45,
  -62,
  -77,
  -90,
  -100,
  -108,
  -112,
  -114,
  -112,
  -108,
  -101,
  -90,
  -78,
  -63,
  -47,
  -29,
  -11,
  8,
  27,
  44,
  61,
  76,
  89,
  100,
  108,
  113,
  116,
  115,
  111,
  105,
  95,
  83,
  69,
  53,
  36,
  18,
  -1,
  -19,
  -38,
  -55,
  -71,
  -85,
  -97,
  -107,
  -114,
  -118,
  -119,
  -117,
  -112,
  -105,
  -95,
  -82,
  -68,
  -52,
  -34,
  -16,
  3,
  21,
  39,
  57,
  73,
  87,
  99,
  109,
  116,
  121,
  123,
  122,
  118,
  111,
  102,
  91,
  77,
  62,
  45,
  27,
  8,
  -10,
  -29,
  -47,
  -64,
  -79,
  -93,
  -105,
  -114,
  -121,
  -125,
  -127
};
int8_t Y[] = {
   0,
   0,
  -2,
   8,
  -7,
  -7,
   10,
   10,
  -8,
  -16,
  -3,
   15,
   17,
   1,
  -17,
  -21,
  -6,
   14,
   24,
   17,
  -3,
  -21,
  -26,
  -15,
   5,
   24,
   29,
   19,
  -1,
  -22,
  -31,
  -27,
  -9,
   13,
   30,
   34,
   24,
   4,
  -18,
  -33,
  -36,
  -25,
  -5,
   18,
   34,
   39,
   30,
   11,
  -12,
  -31,
  -11,
  -28,
  -39,
  -42,
  -38,
  -26,
  -9,
   9,
   26,
   39,
   44,
   42,
   32,
   17,
  -1,
  -19,
  -34,
  -44,
  -46,
  -42,
  -30,
  -14,
   5,
   23,
   37,
   46,
   49,
   44,
   33,
   17,
  -2,
  -20,
  -36,
  -46,
  -51,
  -48,
  -39,
  -25,
  -8,
   11,
   28,
   42,
   51,
   53,
   49,
   38,
   23,
   5,
  -13,
  -30,
  -44,
  -53,
  -55,
  -51,
  -42,
  -27,
  -10,
   9,
   26,
   42,
   52,
   58,
   57,
   51,
   40,
   24,
   6,
  -12,
  -30,
  -45,
  -55,
  -61,
  -61,
  -56,
  -45,
  -30,
  -13,
   6,
   24,
   40,
   53,
   62,
   65,
   63,
   56,
   44,
   29,
   12,
  -7,
  -25,
  -42,
  -55,
  -64,
  -68,
  -67,
  -62,
  -51,
  -37,
  -21,
  -2,
   16,
   34,
   49,
   61,
   69,
   72,
   70,
   64,
   53,
   38,
   22,
   3,
  -15,
  -33,
  -49,
  -61,
  -70,
  -75,
  -75,
  -70,
  -61,
  -48,
  -32,
  -15,
   4,
   22,
   40,
   55,
   66,
   75,
   78,
   78,
   73,
   64,
   51,
   36,
   18,
   0,
  -19,
  -37,
  -52,
  -65,
  -75,
  -81,
  -82,
  -79,
  -72,
  -62,
  -48,
  -32,
  -14,
   5,
   24,
   41,
   56,
   69,
   78,
   84,
   86,
   83,
   77,
   67,
   54,
   38,
   20,
   2,
  -17,
  -35,
  -51,
  -65,
  -77,
  -85,
  -89,
  -89,
  -86,
  -78,
  -67,
  -54,
  -38,
  -20,
  -2,
   17,
   35,
   52,
   66,
   78,
   87,
   92,
   93,
   91,
   85,
   76,
   63,
   48,
   31,
   13,
  -5,
  -24,
  -42,
  -58,
  -72,
  -83,
  -91,
  -96,
  -97,
  -94,
  -88,
  -79,
  -67,
  -52,
  -35,
  -17,
   1,
   20,
   38,
   55,
   69,
   81,
   91,
   97,
   100,
   99,
   95,
   87,
   76,
   63,
   47,
   30,
   12,
  -7,
  -25,
  -43,
  -59,
  -74,
  -85,
  -94,
  -100,
  -103,
  -102,
  -97,
  -90,
  -79,
  -66,
  -51,
  -34,
  -15,
   3,
   22,
   40,
   57,
   71,
   84,
   94,
   101,
   105,
   105,
   103,
   96,
   87,
   76,
   61,
   45,
   28,
   9,
  -10,
  -28,
  -46,
  -62,
  -76,
  -88,
  -98,
  -104,
  -108,
  -108,
  -105,
  -98,
  -89,
  -77,
  -63,
  -47,
  -29,
  -11,
   8,
   26,
   44,
   61,
   75,
   88,
   98,
   105,
   110,
   111,
   108,
   103,
   95,
   84,
   71,
   56,
   39,
   21,
   2,
  -17,
  -35,
  -52,
  -68,
  -82,
  -94,
  -103,
  -109,
  -112,
  -113,
  -110,
  -104,
  -95,
  -83,
  -70,
  -54,
  -37,
  -19,
   0,
   19,
   37,
   54,
   70,
   84,
   96,
   105,
   111,
   114,
   115,
   112,
   106,
   98,
   87,
   73,
   58,
   41,
   23,
   4,
  -15,
  -33,
  -50,
  -67,
  -81,
  -94,
  -104,
  -111,
  -115,
  -117,
  -115,
  -111,
  -104,
  -94,
  -82,
  -67,
  -51,
  -34,
  -15,
   3,
   22,
   40,
   57,
   73,
   87,
   99,
   109,
   115,
   120,
   121,
   119,
   115,
   107,
   98,
   85,
   71,
   55,
   38,
   20,
   1,
  -17,
  -36,
  -53,
  -70,
  -84,
  -97,
  -108,
  -116,
  -122,
  -125,
  -125,
  -122,
  -116,
  -108,
  -98,
  -85,
  -70,
  -54,
  -37,
  -19,
   0
};
int8_t Z[] = {
   127,
   123,
   121,
   119,
   117,
   115,
   114,
   113,
   112,
   111,
   110,
   109,
   108,
   107,
   106,
   105,
   104,
   104,
   103,
   102,
   101,
   101,
   100,
   100,
   99,
   98,
   98,
   97,
   96,
   96,
   95,
   95,
   94,
   94,
   93,
   93,
   92,
   92,
   91,
   91,
   90,
   90,
   89,
   89,
   88,
   88,
   87,
   87,
   87,
   86,
   86,
   85,
   85,
   85,
   84,
   84,
   84,
   83,
   83,
   83,
   83,
   82,
   82,
   82,
   81,
   81,
   81,
   81,
   80,
   80,
   80,
   80,
   79,
   79,
   79,
   79,
   78,
   78,
   78,
   78,
   77,
   77,
   77,
   76,
   76,
   76,
   76,
   76,
   75,
   75,
   75,
   75,
   74,
   74,
   74,
   74,
   73,
   73,
   73,
   73,
   72,
   72,
   72,
   72,
   71,
   71,
   71,
   70,
   70,
   69,
   69,
   69,
   68,
   68,
   68,
   67,
   67,
   67,
   66,
   66,
   66,
   65,
   65,
   65,
   64,
   64,
   64,
   63,
   63,
   63,
   63,
   62,
   62,
   62,
   61,
   61,
   61,
   60,
   60,
   60,
   59,
   59,
   59,
   59,
   58,
   58,
   58,
   57,
   57,
   57,
   57,
   56,
   56,
   56,
   55,
   55,
   55,
   55,
   54,
   54,
   54,
   53,
   53,
   53,
   53,
   52,
   52,
   52,
   52,
   51,
   51,
   51,
   51,
   50,
   50,
   50,
   49,
   49,
   49,
   49,
   48,
   48,
   48,
   48,
   47,
   47,
   47,
   47,
   46,
   46,
   46,
   46,
   45,
   45,
   45,
   45,
   44,
   44,
   44,
   44,
   43,
   43,
   43,
   43,
   42,
   42,
   42,
   42,
   41,
   41,
   41,
   41,
   40,
   40,
   40,
   39,
   39,
   39,
   39,
   38,
   38,
   38,
   38,
   37,
   37,
   37,
   37,
   36,
   36,
   36,
   36,
   35,
   35,
   35,
   35,
   34,
   34,
   34,
   34,
   33,
   33,
   33,
   33,
   33,
   32,
   32,
   32,
   32,
   31,
   31,
   31,
   31,
   31,
   30,
   30,
   30,
   30,
   30,
   29,
   29,
   29,
   29,
   29,
   29,
   28,
   28,
   28,
   28,
   28,
   27,
   27,
   27,
   27,
   27,
   27,
   26,
   26,
   26,
   26,
   26,
   26,
   25,
   25,
   25,
   25,
   25,
   25,
   24,
   24,
   24,
   24,
   24,
   24,
   23,
   23,
   23,
   23,
   23,
   22,
   22,
   22,
   22,
   22,
   22,
   22,
   21,
   21,
   21,
   21,
   21,
   21,
   21,
   20,
   20,
   20,
   20,
   20,
   20,
   20,
   19,
   19,
   19,
   19,
   19,
   19,
   19,
   18,
   18,
   18,
   18,
   18,
   18,
   18,
   17,
   17,
   17,
   17,
   17,
   17,
   17,
   16,
   16,
   16,
   16,
   16,
   16,
   16,
   16,
   15,
   15,
   15,
   15,
   15,
   15,
   15,
   15,
   14,
   14,
   14,
   14,
   14,
   14,
   14,
   14,
   14,
   14,
   13,
   13,
   13,
   13,
   13,
   13,
   13,
   13,
   13,
   12,
   12,
   12,
   12,
   12,
   12,
   12,
   12,
   12,
   12,
   11,
   11,
   11,
   11,
   11,
   11,
   11,
   11,
   11,
   11,
   10,
   10,
   10,
   10,
   10,
   10,
   10,
   9,
   9,
   9,
   9,
   9,
   8,
   8,
   8,
   8,
   8,
   7,
   7,
   7,
   7,
   7,
   6,
   6,
   6,
   6,
   6,
   5,
   5,
   5,
   5,
   5,
   4,
   4,
   4,
   4,
   4,
   3,
   3,
   3,
   3,
   3,
   2,
   2,
   2,
   2,
   2,
   1,
   1,
   1,
   1,
   1,
   0,
   0,
   0
};
int8_t R[] = {
   0,
   4,
   6,
   8,
   10,
   12,
   13,
   14,
   15,
   16,
   17,
   18,
   19,
   20,
   21,
   22,
   23,
   23,
   24,
   25,
   26,
   26,
   27,
   27,
   28,
   29,
   29,
   30,
   31,
   31,
   32,
   32,
   33,
   33,
   34,
   34,
   35,
   35,
   36,
   36,
   37,
   37,
   38,
   38,
   39,
   39,
   40,
   40,
   40,
   41,
   41,
   42,
   42,
   42,
   43,
   43,
   43,
   44,
   44,
   44,
   44,
   45,
   45,
   45,
   46,
   46,
   46,
   46,
   47,
   47,
   47,
   47,
   48,
   48,
   48,
   48,
   49,
   49,
   49,
   49,
   50,
   50,
   50,
   51,
   51,
   51,
   51,
   51,
   52,
   52,
   52,
   52,
   53,
   53,
   53,
   53,
   54,
   54,
   54,
   54,
   55,
   55,
   55,
   55,
   56,
   56,
   56,
   57,
   57,
   58,
   58,
   58,
   59,
   59,
   59,
   60,
   60,
   60,
   61,
   61,
   61,
   62,
   62,
   62,
   63,
   63,
   63,
   64,
   64,
   64,
   64,
   65,
   65,
   65,
   66,
   66,
   66,
   67,
   67,
   67,
   68,
   68,
   68,
   68,
   69,
   69,
   69,
   70,
   70,
   70,
   70,
   71,
   71,
   71,
   72,
   72,
   72,
   72,
   73,
   73,
   73,
   74,
   74,
   74,
   74,
   75,
   75,
   75,
   75,
   76,
   76,
   76,
   76,
   77,
   77,
   77,
   78,
   78,
   78,
   78,
   79,
   79,
   79,
   79,
   80,
   80,
   80,
   80,
   81,
   81,
   81,
   81,
   82,
   82,
   82,
   82,
   83,
   83,
   83,
   83,
   84,
   84,
   84,
   84,
   85,
   85,
   85,
   85,
   86,
   86,
   86,
   86,
   87,
   87,
   87,
   88,
   88,
   88,
   88,
   89,
   89,
   89,
   89,
   90,
   90,
   90,
   90,
   91,
   91,
   91,
   91,
   92,
   92,
   92,
   92,
   93,
   93,
   93,
   93,
   94,
   94,
   94,
   94,
   94,
   95,
   95,
   95,
   95,
   96,
   96,
   96,
   96,
   96,
   97,
   97,
   97,
   97,
   97,
   98,
   98,
   98,
   98,
   98,
   98,
   99,
   99,
   99,
   99,
   99,
   100,
   100,
   100,
   100,
   100,
   100,
   101,
   101,
   101,
   101,
   101,
   101,
   102,
   102,
   102,
   102,
   102,
   102,
   103,
   103,
   103,
   103,
   103,
   103,
   104,
   104,
   104,
   104,
   104,
   105,
   105,
   105,
   105,
   105,
   105,
   105,
   106,
   106,
   106,
   106,
   106,
   106,
   106,
   107,
   107,
   107,
   107,
   107,
   107,
   107,
   108,
   108,
   108,
   108,
   108,
   108,
   108,
   109,
   109,
   109,
   109,
   109,
   109,
   109,
   110,
   110,
   110,
   110,
   110,
   110,
   110,
   111,
   111,
   111,
   111,
   111,
   111,
   111,
   111,
   112,
   112,
   112,
   112,
   112,
   112,
   112,
   112,
   113,
   113,
   113,
   113,
   113,
   113,
   113,
   113,
   113,
   113,
   114,
   114,
   114,
   114,
   114,
   114,
   114,
   114,
   114,
   115,
   115,
   115,
   115,
   115,
   115,
   115,
   115,
   115,
   115,
   116,
   116,
   116,
   116,
   116,
   116,
   116,
   116,
   116,
   116,
   117,
   117,
   117,
   117,
   117,
   117,
   117,
   118,
   118,
   118,
   118,
   118,
   119,
   119,
   119,
   119,
   119,
   120,
   120,
   120,
   120,
   120,
   121,
   121,
   121,
   121,
   121,
   122,
   122,
   122,
   122,
   122,
   123,
   123,
   123,
   123,
   123,
   124,
   124,
   124,
   124,
   124,
   125,
   125,
   125,
   125,
   125,
   126,
   126,
   126,
   126,
   126,
   127,
   127,
   127
};
int8_t Q[] = {
   83,
   3,
   71,
   24,
   111,
   77,
   45,
   16,
   116,
   91,
   67,
   44,
   22,
   1,
   108,
   88,
   69,
   51,
   33,
   15,
   125,
   108,
   91,
   75,
   60,
   44,
   29,
   14,
   126,
   112,
   97,
   83,
   69,
   55,
   42,
   28,
   15,
   2,
   116,
   103,
   91,
   78,
   66,
   54,
   42,
   30,
   18,
   6,
   121,
   109,
   121,
   112,
   103,
   94,
   85,
   77,
   68,
   59,
   50,
   42,
   33,
   25,
   16,
   8,
   127,
   118,
   110,
   102,
   94,
   86,
   77,
   69,
   61,
   54,
   46,
   38,
   30,
   22,
   15,
   7,
   126,
   119,
   111,
   104,
   96,
   89,
   81,
   74,
   67,
   59,
   52,
   45,
   38,
   30,
   23,
   16,
   9,
   2,
   122,
   115,
   108,
   101,
   94,
   87,
   81,
   74,
   67,
   60,
   54,
   47,
   41,
   34,
   28,
   21,
   15,
   8,
   2,
   123,
   117,
   110,
   104,
   98,
   92,
   86,
   80,
   74,
   68,
   62,
   56,
   50,
   44,
   38,
   32,
   26,
   21,
   15,
   9,
   4,
   125,
   119,
   114,
   108,
   102,
   97,
   91,
   86,
   80,
   75,
   70,
   64,
   59,
   53,
   48,
   43,
   37,
   32,
   27,
   22,
   16,
   11,
   6,
   1,
   123,
   118,
   113,
   107,
   102,
   97,
   92,
   87,
   82,
   77,
   72,
   67,
   62,
   58,
   53,
   48,
   43,
   38,
   33,
   28,
   24,
   19,
   14,
   9,
   5,
   127,
   122,
   117,
   113,
   108,
   104,
   99,
   94,
   90,
   85,
   80,
   76,
   71,
   67,
   62,
   58,
   53,
   49,
   44,
   40,
   35,
   31,
   27,
   22,
   18,
   13,
   9,
   5,
   0,
   123,
   119,
   114,
   110,
   106,
   102,
   97,
   93,
   89,
   85,
   81,
   76,
   72,
   68,
   64,
   60,
   56,
   51,
   47,
   43,
   39,
   35,
   31,
   27,
   23,
   19,
   15,
   11,
   7,
   3,
   126,
   122,
   118,
   114,
   110,
   106,
   102,
   98,
   94,
   90,
   86,
   83,
   79,
   75,
   71,
   67,
   63,
   59,
   56,
   52,
   48,
   44,
   40,
   36,
   33,
   29,
   25,
   21,
   17,
   14,
   10,
   6,
   2,
   126,
   122,
   118,
   114,
   111,
   107,
   103,
   100,
   96,
   92,
   88,
   85,
   81,
   77,
   74,
   70,
   67,
   63,
   59,
   56,
   52,
   48,
   45,
   41,
   38,
   34,
   30,
   27,
   23,
   20,
   16,
   12,
   9,
   5,
   2,
   125,
   122,
   118,
   115,
   111,
   108,
   104,
   100,
   97,
   93,
   90,
   86,
   83,
   79,
   76,
   72,
   69,
   66,
   62,
   59,
   55,
   52,
   48,
   45,
   41,
   38,
   34,
   31,
   28,
   24,
   21,
   17,
   14,
   11,
   7,
   4,
   0,
   124,
   121,
   117,
   114,
   110,
   107,
   104,
   100,
   97,
   94,
   90,
   87,
   84,
   80,
   77,
   74,
   70,
   67,
   63,
   60,
   57,
   54,
   50,
   47,
   44,
   40,
   37,
   34,
   30,
   27,
   24,
   20,
   17,
   14,
   11,
   7,
   4,
   1,
   124,
   121,
   118,
   115,
   111,
   108,
   105,
   102,
   98,
   95,
   92,
   89,
   85,
   82,
   79,
   76,
   73,
   69,
   66,
   63,
   60,
   57,
   53,
   50,
   47,
   44,
   41,
   38,
   34,
   31,
   28,
   25,
   22,
   19,
   16,
   13,
   9,
   6,
   3,
   0,
   124,
   121,
   118,
   115,
   112,
   109,
   106,
   103,
   100,
   97,
   94,
   91,
   88,
   85,
   81,
   78,
   75,
   72,
   69,
   66,
   64
};
int8_t QQ[] = {
   32,
   32,
   32,
   32,
   31,
   32,
   32,
   31,
   31,
   32,
   33,
   32,
   31,
   30,
   31,
   32,
   33,
   33,
   32,
   30,
   30,
   31,
   32,
   34,
   34,
   33,
   31,
   30,
   29,
   30,
   31,
   33,
   34,
   34,
   33,
   31,
   30,
   29,
   29,
   30,
   32,
   34,
   35,
   35,
   33,
   31,
   29,
   28,
   28,
   29,
   28,
   29,
   30,
   32,
   34,
   35,
   36,
   36,
   35,
   34,
   32,
   30,
   28,
   27,
   27,
   27,
   28,
   30,
   32,
   34,
   36,
   37,
   37,
   37,
   35,
   33,
   31,
   29,
   27,
   26,
   26,
   26,
   27,
   29,
   31,
   34,
   36,
   38,
   38,
   38,
   38,
   36,
   34,
   31,
   29,
   27,
   25,
   24,
   25,
   25,
   27,
   29,
   32,
   35,
   37,
   39,
   40,
   40,
   39,
   38,
   36,
   33,
   30,
   27,
   24,
   23,
   22,
   22,
   23,
   24,
   27,
   30,
   34,
   37,
   40,
   42,
   43,
   43,
   43,
   42,
   39,
   36,
   32,
   28,
   24,
   21,
   19,
   18,
   18,
   18,
   20,
   22,
   26,
   30,
   35,
   40,
   43,
   46,
   47,
   48,
   48,
   47,
   46,
   43,
   38,
   32,
   26,
   21,
   17,
   14,
   13,
   12,
   12,
   13,
   14,
   17,
   21,
   28,
   37,
   44,
   49,
   52,
   53,
   54,
   55,
   55,
   54,
   53,
   51,
   46,
   36,
   23,
   14,
   10,
   7,
   6,
   5,
   5,
   5,
   5,
   5,
   6,
   8,
   15,
   38,
   55,
   59,
   60,
   61,
   62,
   62,
   63,
   63,
   63,
   63,
   64,
   65,
   68,
   107,
   122,
   123,
   124,
   124,
   124,
   124,
   124,
   124,
   123,
   122,
   121,
   119,
   114,
   104,
   87,
   78,
   74,
   72,
   71,
   70,
   70,
   70,
   70,
   71,
   72,
   74,
   76,
   81,
   88,
   97,
   105,
   111,
   114,
   116,
   117,
   117,
   118,
   117,
   117,
   116,
   115,
   113,
   110,
   106,
   100,
   94,
   87,
   83,
   80,
   78,
   76,
   75,
   75,
   75,
   75,
   76,
   77,
   79,
   81,
   84,
   89,
   94,
   99,
   104,
   108,
   110,
   112,
   113,
   114,
   114,
   114,
   114,
   113,
   112,
   110,
   108,
   104,
   100,
   96,
   92,
   88,
   84,
   82,
   80,
   79,
   78,
   78,
   78,
   78,
   79,
   80,
   81,
   83,
   86,
   89,
   93,
   97,
   101,
   104,
   106,
   108,
   110,
   111,
   111,
   112,
   112,
   111,
   110,
   109,
   108,
   106,
   103,
   100,
   97,
   93,
   90,
   87,
   85,
   83,
   82,
   81,
   80,
   80,
   80,
   80,
   81,
   82,
   83,
   85,
   87,
   90,
   93,
   96,
   99,
   102,
   104,
   106,
   108,
   109,
   109,
   110,
   110,
   110,
   109,
   109,
   108,
   106,
   104,
   102,
   100,
   97,
   94,
   91,
   89,
   86,
   85,
   83,
   82,
   82,
   81,
   81,
   81,
   82,
   82,
   83,
   85,
   87,
   89,
   91,
   94,
   96,
   99,
   101,
   104,
   105,
   107,
   108,
   108,
   109,
   109,
   109,
   109,
   108,
   107,
   106,
   104,
   102,
   100,
   98,
   95,
   93,
   90,
   88,
   86,
   85,
   84,
   83,
   83,
   82,
   82,
   82,
   83,
   84,
   85,
   86,
   87,
   89,
   91,
   93,
   96,
   98,
   100,
   102,
   103,
   105,
   106,
   107,
   107,
   107,
   108,
   107,
   107,
   107,
   106,
   105,
   103,
   102,
   100,
   98,
   96,
   94,
   92,
   90,
   89,
   87,
   86,
   85,
   84,
   84,
   84,
   84
};
int8_t RR[] = {
   85,
   81,
   78,
   76,
   75,
   73,
   72,
   71,
   69,
   68,
   67,
   66,
   65,
   65,
   64,
   63,
   62,
   61,
   61,
   60,
   59,
   59,
   58,
   57,
   57,
   56,
   55,
   55,
   55,
   54,
   53,
   53,
   52,
   52,
   51,
   50,
   50,
   50,
   49,
   48,
   48,
   48,
   48,
   47,
   46,
   46,
   45,
   45,
   45,
   44,
   44,
   43,
   43,
   42,
   42,
   42,
   42,
   42,
   42,
   41,
   40,
   40,
   40,
   40,
   40,
   40,
   39,
   38,
   38,
   38,
   38,
   39,
   38,
   38,
   37,
   36,
   36,
   36,
   36,
   37,
   37,
   36,
   35,
   34,
   34,
   34,
   34,
   35,
   35,
   34,
   34,
   33,
   32,
   32,
   32,
   32,
   33,
   33,
   33,
   32,
   31,
   30,
   30,
   30,
   30,
   30,
   31,
   30,
   30,
   28,
   27,
   26,
   26,
   27,
   27,
   28,
   28,
   28,
   27,
   25,
   24,
   23,
   23,
   23,
   24,
   25,
   25,
   25,
   24,
   23,
   22,
   20,
   20,
   20,
   20,
   21,
   22,
   23,
   23,
   22,
   21,
   19,
   17,
   16,
   16,
   17,
   18,
   20,
   21,
   21,
   21,
   19,
   18,
   16,
   14,
   13,
   13,
   14,
   16,
   18,
   19,
   19,
   19,
   18,
   16,
   14,
   11,
   10,
   10,
   11,
   13,
   15,
   17,
   18,
   18,
   18,
   16,
   14,
   11,
   8,
   6,
   6,
   9,
   12,
   14,
   16,
   18,
   18,
   17,
   16,
   14,
   11,
   8,
   4,
   3,
   5,
   9,
   12,
   15,
   17,
   18,
   18,
   18,
   16,
   14,
   11,
   7,
   3,
   1,
   5,
   9,
   12,
   15,
   17,
   19,
   19,
   19,
   18,
   16,
   14,
   11,
   7,
   5,
   5,
   8,
   11,
   14,
   17,
   19,
   20,
   21,
   21,
   20,
   18,
   16,
   13,
   11,
   9,
   9,
   10,
   13,
   15,
   18,
   20,
   22,
   23,
   23,
   23,
   22,
   20,
   18,
   16,
   14,
   12,
   12,
   13,
   15,
   18,
   20,
   22,
   24,
   25,
   25,
   25,
   24,
   23,
   21,
   19,
   17,
   16,
   15,
   16,
   17,
   19,
   21,
   23,
   25,
   26,
   27,
   28,
   27,
   26,
   25,
   23,
   21,
   20,
   18,
   18,
   18,
   20,
   22,
   24,
   26,
   27,
   29,
   30,
   30,
   30,
   29,
   28,
   26,
   24,
   23,
   22,
   21,
   21,
   22,
   23,
   25,
   27,
   29,
   30,
   31,
   32,
   32,
   32,
   31,
   30,
   28,
   27,
   25,
   24,
   23,
   24,
   24,
   26,
   27,
   29,
   31,
   32,
   33,
   34,
   34,
   34,
   33,
   32,
   31,
   29,
   28,
   27,
   26,
   26,
   27,
   28,
   29,
   31,
   33,
   34,
   35,
   36,
   36,
   36,
   36,
   35,
   34,
   32,
   31,
   30,
   29,
   28,
   28,
   29,
   30,
   32,
   33,
   35,
   36,
   37,
   38,
   38,
   38,
   38,
   37,
   36,
   34,
   33,
   32,
   31,
   30,
   30,
   31,
   32,
   33,
   35,
   36,
   38,
   39,
   40,
   40,
   40,
   40,
   39,
   38,
   36,
   35,
   34,
   33,
   32,
   32,
   33,
   34,
   35,
   36,
   38,
   39,
   41,
   42,
   42,
   43,
   43,
   42,
   42,
   41,
   39,
   38,
   37,
   37,
   36,
   36,
   37,
   38,
   39,
   40,
   42,
   43,
   44,
   45,
   46,
   47,
   47,
   46,
   46,
   45,
   44,
   43,
   42,
   41,
   40,
   40,
   40,
   41,
   42,
   43,
   45,
   46,
   47,
   49,
   50,
   50,
   50
};



#include <FastLED.h>

#define LED_PIN     5
#define NUM_LEDS    450
#define BRIGHTNESS  64
#define LED_TYPE    WS2811
#define COLOR_ORDER GRB
CRGB leds[NUM_LEDS];

float height = 76 / 39.3701;
float diameter = 33 / 39.3701;
uint8_t D[NUM_LEDS];

long int count = 0;

void setup() {
    delay( 3000 ); // power-up safety delay
    FastLED.addLeds<LED_TYPE, LED_PIN, COLOR_ORDER>(leds, NUM_LEDS).setCorrection( TypicalLEDStrip );
    FastLED.setBrightness(  BRIGHTNESS );

    Serial.begin(9600);
}

void loop() {
  const float Kt = PI;
  const float Kq = 3;
  const float Kz = 4*PI/height;
  const float Krr = -2*PI/50e-2;
  const float Kqq = 360/90.0;
  const float Kd = -1.5/diameter;  // completes 1(full bright) in D distance
  const float Kte = 1/0.6; // completes 1(full bright) in 1 sec

  static int pattern_mode = 0;
  static float trig_time = millis() / 1000.0;
  static float c[] = {0.0, 0.0, 0.0};

  static long t1 = millis();
  const long dt1 = 5000;
  if (millis() - t1 > dt1) {
    t1 = millis();

    pattern_mode = (++count) % 3;
  }

  static long t2 = millis();
  const long dt2 = 2000;
  if (millis() - t2 > dt2) {
    t2 = millis();

    trig_time = millis() / 1000.0;
    
    c[0] = (rand() % 1000) / 1000.0;
    c[1] = (rand() % 1000) / 1000.0;
    c[2] = (rand() % 1000) / 1000.0;
    float x0 = ((rand() % 1000) - 500) * diameter / 1000,
          y0 = ((rand() % 1000) - 500) * diameter / 1000,
          z0 = (rand() % 1000) * (2*height/3) / 1000;
    for (int i = 0; i < NUM_LEDS; i++) {
      float x = X[i] * 0.5*diameter/127 - x0,
            y = Y[i] * 0.5*diameter/127 - y0,
            z = Z[i] * height/127 - z0;
      D[i] = round(sqrt(x*x + y*y + z*z) * 127/height);
    }
      

    Serial.println(x0);
  }
  
  static long t0 = millis();
  const long dt0 = 50;
  if (millis() - t0 > dt0) {
    t0 = millis();
    
    for (int i = 0; i < NUM_LEDS; i++) {
      float time = millis() / 1000.0;
      float B;

      if (pattern_mode == 0)
          B = sin(Kt*time + Kq*Q[i] * 2*PI/127);  // radial
      else if (pattern_mode == 1)
          B = sin(Kt*time + Kz*Z[i] * height/127);  // falling rings
      else if (pattern_mode == 2)
          B = sin(Kt*time + Krr*RR[i] * height/127);  // circles
      else if (pattern_mode == 3)
          B = sin(Kt*time + Kqq*QQ[i] * 2*PI/127);  // rays

      B = constrain(B, 0, 1);

//      float F = sin(Kte*((t0/1000.0)-trig_time)) + Kd*D[i];
      float F = sin(Kte*((t0/1000.0)-trig_time)) + Kd*(D[i] * height/127.0);
      F = constrain(F, 0.0, 1.0);
      
      float r = constrain((c[0]*F*1.5 + B*B*0.5) * 255, 0, 255),
            g = constrain((c[1]*F*1.5 + B*B*0.5) * 255, 0, 255),
            b = constrain((c[2]*F*1.5 + B*B*0.5) * 255, 0, 255);
//      leds[i] = F > 0.0 ? CRGB::White : CRGB::Black;
//      leds[i] = F > 0.0 ? CRGB(c[0]*255*F, c[1]*255*F, c[2]*255*F) : CRGB::Black;
      leds[i] = CRGB(r, g, b);
    }
    FastLED.show();
  }
  FastLED.delay(1);
}



